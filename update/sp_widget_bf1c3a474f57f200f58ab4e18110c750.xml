<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($filter, $location) {
	var c = this;
	c.options.glyph = c.options.glyph || 'search';
	c.options.title = c.options.title || c.data.searchMsg;

	var getDomainForItem = function(item) {
		switch (item.type) {
			case 'kb':
				return c.data.service_domains.filter(function(domain) {
					return item.kb_knowledge_base.value == domain.portal.kb_knowledge_base;
				})[0];
			case 'sc':
				return c.data.service_domains.filter(function(domain) {
					return item.sc_catalogs.indexOf(domain.portal.sc_catalog) != -1;
				})[0];
			case 'qa':
				return c.data.service_domains.filter(function(domain) {
					return item.kb_knowledge_base.value == domain.portal.sqanda_knowledge_base || domain.portal.kb_knowledge_base;
				})[0];
			default:
				return;
		}
	};
	
	c.getDomainName = function(item) {
		var domain = getDomainForItem(item);
		
		if (!domain)
			return '';
		
		return domain.name;
	}
	
	c.getPortalPath = function(item) {
		var domain =  getDomainForItem(item);

		if (!domain)
			return $location.path();
		
		return domain.portal.url_suffix;
	};
	
	
	c.onSelect = function($item, $model, $label) {
		if ($item.type == "sc")
			$location.search({id: 'sc_cat_item', sys_id: $item.sys_id});
		if ($item.type == "sc_content") {
			if ($item.content_type == "kb")
				$location.search({id: 'kb_article', sys_id: $item.kb_article});
			else if ($item.content_type == "external")
				window.open($item.url, '_blank');
			else
				$location.search({id: 'sc_cat_item', sys_id: $item.sys_id});
		}
		if ($item.type == "sc_guide")
			$location.search({id: 'sc_cat_item_guide', sys_id: $item.sys_id});
		if ($item.type == "kb")
			$location.path(c.getPortalPath($item)).search({id: 'kb_article', sys_id: $item.sys_id});
		if ($item.type == "qa")
			$location.search({id: 'kb_social_qa_question', question_id: $item.sys_id});
		if ($item.type == "rec")
			$location.search({id: $item.page, sys_id: $item.sys_id, table: $item.table});
	};

	c.getResults = function(query) {
		return c.server.get({q: query}).then(function(response) {
			var a = $filter('orderBy')(response.data.results, '-score');
			return $filter('limitTo')(a, c.data.limit);
		});
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.input-group-mini {
  padding-top: 16px;
  color: $text-color;
  border-bottom: 1px;
  border-style: solid;
  border-top: 0px;
  border-left: 0px;
  border-right: 0px;
}

.input-mini {
  font-size: 13px; 
  color: $text-color;
  height: 20px;

  border-style: none;
  box-shadow: none;
  background: $navbar-inverse-bg;
  color: $navbar-inverse-link-color;
}

ul.dropdown-menu {
  min-width: 100%;
  border-radius: 0px 0px 4px 4px;
  margin:0px;
  left: initial !important;
}

ul.dropdown-menu a.ta-item {
  line-height: 20px;
}

ul.dropdown-menu i.ta-icon, i.ta-img {
  width: 20px;
  height: 20px;
  background-size: contain;
  display: inline-block;
  background-repeat: no-repeat;
  background-position: center center;
  text-align: center;
  line-height: 20px;
  float:left;
  margin-right: 8px;
}

input[name="q"] {
  color: $text-color;
}

.btn-search-header {
  background-color: #fff;
  color: $brand-primary;
}

.btn-search:hover, .btn-search:focus  {
  background-color: #fff;
}

.btn-search-header {
  background-color: blue;
  color: $brand-primary;
}

.btn-search-header:hover,.btn-search-header:focus  {
  background-color: red;
  color: #fff;
}





</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cross-portal-typeahead-search-mini</id>
        <internal>false</internal>
        <link/>
        <name>Cross Portal Typeahead Search Mini</name>
        <option_schema>[{"name":"padding_bottom","default_value":"50px","label":"Padding Bottom","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.searchType = $sp.getParameter("t");
	data.results = [];
	data.searchMsg = gs.getMessage("Search");
	data.limit = options.limit || 15;
	var textQuery = '123TEXTQUERY321';
	data.service_domains = new PortalDomainConfig().getAllPortals();

	if (!input)
		return;

	data.q = input.q;


	// NOTE: No support sp_search_group, cannot access from non-global scope :(
	var searchProcessor = new CrossPortalSearch();
	searchProcessor.setLimit(data.limit);

	getKnowledge();
	if (gs.isLoggedIn())
		getCatalogItems();
	data.sqandaEnabled = gs.getProperty('glide.sp.socialqa.enabled', false) === 'true';
	if (data.sqandaEnabled)
		getQuestions();


	// typeahead search generates multiple "Your text query contained only
	// common words..." msgs, we don't want them
	//	gs.flushMessages();

	//console.log(JSON.stringify(data));

	function getKnowledge() {
		var kb = searchProcessor.getKB(data.q);
		var kbCount = 0;
		while (kb.next() && kbCount < data.limit) {
			if (!$sp.canReadRecord(kb))
				continue;

			var article = {};
			article.type = "kb";
			$sp.getRecordDisplayValues(article, kb, 'sys_id,number,short_description,published,text');
			if (!article.text)
				article.text = "";
			article.text = $sp.stripHTML(article.text);
			article.text = article.text.substring(0,200);
			article.score = parseInt(kb.ir_query_score.getDisplayValue());
			article.label = article.short_description;
			article.kb_knowledge_base = $sp.getField(kb, 'kb_knowledge_base');
			data.results.push(article);
			kbCount++;
		}
	}

	function getCatalogItems() {
		var sc = searchProcessor.getCatalogItems(data.q);

		var catCount = 0;
		//$sp.log("sc.next(): " + sc.next());
		while (sc.next() && catCount < data.limit) {
			//$sp.log("$sp.canReadRecord(sc): " + $sp.canReadRecord(sc) + " / cat item: " + sc.getUniqueValue());
			if (!$sp.canReadRecord(sc))
			continue;

			var item = {};
			if (sc.getRecordClassName() == "sc_cat_item_guide")
				item.type = "sc_guide";
			else if (sc.getRecordClassName() == "sc_cat_item_content") {
				var gr = new GlideRecord('sc_cat_item_content');
				gr.get(sc.getUniqueValue());
				$sp.getRecordValues(item, gr, 'url,content_type,kb_article');
				item.type = "sc_content";
			}
			else
				item.type = "sc";

			$sp.getRecordDisplayValues(item, sc, 'name,short_description,picture,price,sys_id');
			item.score = parseInt(sc.ir_query_score.getDisplayValue());
			item.label = item.name;
			item.sc_catalogs = sc.sc_catalogs.toString();
			data.results.push(item);
			catCount++;
		}
	}

	function getQuestions() {
		var questionGR = searchProcessor.getSquanda(data.q);

		var qCount = 0;
		while (questionGR.next() && qCount < data.limit) {
			if (!$sp.canReadRecord(questionGR))
				continue;

			var question = {};
			question.type = "qa";
			$sp.getRecordDisplayValues(question, questionGR, 'question,question_details,sys_created_on,sys_id');
			question.text = (question.question_details) ? $sp.stripHTML(question.question_details) : "";
			question.text = question.text.substring(0,200);
			question.label = question.question;
			question.score = 0;
			question.kb_knowledge_base = $sp.getField(questionGR, 'kb_knowledge_base');
			data.results.push(question);
			qCount++;
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>frank.schuster</sys_created_by>
        <sys_created_on>2017-06-16 16:50:27</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>bf1c3a474f57f200f58ab4e18110c750</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Cross Portal Typeahead Search Mini</sys_name>
        <sys_package display_value="Shared Services Portal" source="x_snc_esm_portal">74c1fa4f4f17f200f58ab4e18110c7f4</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Shared Services Portal">74c1fa4f4f17f200f58ab4e18110c7f4</sys_scope>
        <sys_update_name>sp_widget_bf1c3a474f57f200f58ab4e18110c750</sys_update_name>
        <sys_updated_by>frank.schuster</sys_updated_by>
        <sys_updated_on>2017-06-16 16:50:57</sys_updated_on>
        <template><![CDATA[<form method="get" action="?" ng-style="{'padding-bottom': c.options.padding_bottom}">
  <input type="hidden" name="id" value="enterprise_search"/>
  <input type="hidden" name="t" value="{{data.searchType}}"/>
  <div class="input-group input-group-mini">
    <span class="input-group-btn">
      <i ng-if="::c.options.glyph" class="fa fa-{{::c.options.glyph}}"></i>
    </span>

    <input name="q" type="text" placeholder="{{::c.options.title}}" ng-model="c.selectedState"
           ng-model-options="{debounce: 250}" autocomplete="off"
           uib-typeahead="item as item.label for item in c.getResults($viewValue)"
           typeahead-focus-first="false"
           typeahead-on-select="c.onSelect($item, $model, $label)"
           typeahead-template-url="x_snc_ssp_typeahead_search_item_mini" class="form-control input-typeahead input-mini">

  </div>
</form>]]></template>
    </sp_widget>
</record_update>
